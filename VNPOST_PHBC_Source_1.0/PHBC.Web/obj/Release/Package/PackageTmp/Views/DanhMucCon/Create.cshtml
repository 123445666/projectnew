@model PHBC.DAO.Models.SysDMPublicModel
@using PHBC.Web.Constants
@{
    ViewBag.Title = Application.ButtonLabel.Create + ViewBag.TitleName;
}

<div class="panel panel-primary">
    <div class="panel-heading">
        @Application.ButtonLabel.Create @ViewBag.TitleName
    </div>
    <div class="panel-body">


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true)
                @Html.ValidationMessage("Error")
                
                <div class="form-group col-md-12">
                    <label class="col-md-3 control-label">
                        @Html.DisplayNameFor(model => model.TypeId):
                    </label>
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.TypeId, new { htmlAttributes = new {@class = "form-control", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.TypeId, "", new { @class = "text-danger" })
                    </div>
                </div>            

                <div class="form-group col-md-12">
                    <label class="col-md-3 control-label">
                        @Html.DisplayNameFor(model => model.Name):
                    </label>
                    <div class="col-md-9">
                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>                             

                <div class="form-group col-md-12">
                    <label class="col-md-3 control-label">
                        @Html.DisplayNameFor(model => model.Code)
                        (<span class="text-danger">*</span>):
                    </label>
                    <div class="col-md-9">
                        @Html.TextAreaFor(model => model.Code, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                    </div>
                </div>
                
                <div class="form-group col-md-12">
                    <label class="col-md-3 control-label">
                        @Html.DisplayNameFor(model => model.IsLock):
                    </label>
                    <div class="col-md-9">
                        @Html.CheckBoxFor(model => model.bLock)
                        @Html.ValidationMessageFor(model => model.IsLock)
                    </div>
                </div>      
                              
                <div class="form-group col-md-12">
                    <label class="col-md-3 control-label">
                        @Html.DisplayNameFor(model => model.Description):
                    </label>
                    <div class="col-md-9">
                        @Html.TextBoxFor(model => model.Description, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>         

                <div>
                    <div class="col-md-offset-3 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                        @Html.ActionLink(Application.ButtonLabel.Back, "Index", null, new { @class = "btn btn-default" })
                    </div>
                </div>
            </div>
        }

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
</div>
</div>